{"ast":null,"code":"var _jsxFileName = \"/Users/alexwan/Documents/GitHub/final-frontend-BochengWan123/frontend/src/Component/Landing/Login.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { userlogin, sendcookies } from \"../../actions\";\nimport { Redirect } from \"react-router-dom\";\nconst baseurl = new URL(\"http://localhost:4200/\");\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.errorMessage = '';\n    this.state = {\n      redirect: false,\n      userId: \"\",\n      usergroup: this.props.usergroup\n    };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.errorMessage = '';\n    this.user = document.getElementById(\"Lname_field\").value;\n    this.pw = document.getElementById(\"Lpassword\").value;\n    let temp = this.props.usergroup;\n    let input = {\n      \"username\": this.user,\n      \"password\": Number(this.pw)\n    };\n    console.log(input);\n    let option = {\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(input),\n      method: \"POST\",\n      credentials: \"include\"\n    };\n\n    if (this.user !== '' && this.pw !== '') {\n      fetch(baseurl + 'login', option).then(res => {\n        let cookie = res.headers.raw()['set-cookie'];\n        this.props.sendcookies(cookie);\n        console.log(cookie, res);\n        return res.json();\n      }).then(res => {\n        if (res.result === 'success') {\n          this.props.userlogin(this.user, this.pw);\n          this.setState({\n            redirect: true\n          });\n        } else {\n          this.errorMessage = 'Password is wrong or not an existing user!';\n          this.setState({\n            errorMessage: this.errorMessage\n          });\n        }\n      });\n    } else {\n      this.errorMessage = 'Account name or password cannot be blank!';\n      this.setState({\n        errorMessage: this.errorMessage\n      });\n    }\n\n    return this.errorMessage;\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/Main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-6 col-md-6 col-sm-6 col-xs-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header text-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, !(this.errorMessage === '') ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row alert-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 54\n      }\n    }, this.errorMessage) : '', /*#__PURE__*/React.createElement(\"form\", {\n      method: \"GET\",\n      action: \"index.html\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left\",\n      htmlFor: \"Lname_field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, \"Account Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"Lname_field\",\n      placeholder: \"Enter account name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-left\",\n      htmlFor: \"Lpassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, \"Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      id: \"Lpassword\",\n      placeholder: \"Enter password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, \"Login\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    usergroup: state.usergroup\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    userlogin: (userId, password) => dispatch(userlogin(userId, password)),\n    sendcookies: cookies => dispatch(sendcookies(cookies))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/alexwan/Documents/GitHub/final-frontend-BochengWan123/frontend/src/Component/Landing/Login.js"],"names":["React","connect","userlogin","sendcookies","Redirect","baseurl","URL","Login","Component","constructor","props","handleSubmit","bind","errorMessage","state","redirect","userId","usergroup","e","preventDefault","user","document","getElementById","value","pw","temp","input","Number","console","log","option","headers","body","JSON","stringify","method","credentials","fetch","then","res","cookie","raw","json","result","setState","render","mapStateToProps","mapDispatchToProps","dispatch","password","cookies"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {userlogin,sendcookies} from \"../../actions\";\nimport {Redirect} from \"react-router-dom\";\nconst baseurl = new URL(\"http://localhost:4200/\");\n\nclass Login extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.errorMessage = '';\n        this.state = {\n            redirect:false,\n            userId:\"\",\n            usergroup:this.props.usergroup\n        }\n    }\n    handleSubmit(e){\n        e.preventDefault();\n\n        this.errorMessage = '';\n        this.user = document.getElementById(\"Lname_field\").value;\n        this.pw = document.getElementById(\"Lpassword\").value\n        let temp = this.props.usergroup\n        let input = {\"username\":this.user,\"password\":Number(this.pw)};\n        console.log(input)\n        let option = {\n            headers:{\"content-type\":\"application/json\"},\n            body:JSON.stringify(input),\n            method:\"POST\",\n            credentials:\"include\",\n\n        };\n\n\n\n        if(this.user!=='' && this.pw!==''){\n            fetch(baseurl+'login', option).then(res => {\n                let cookie = res.headers.raw()['set-cookie'];\n                this.props.sendcookies(cookie);\n                console.log(cookie,res)\n                return res.json()}).then(res => {\n                if(res.result === 'success'){\n                    this.props.userlogin(this.user, this.pw);\n                    this.setState({redirect: true});\n\n                } else{\n                    this.errorMessage = 'Password is wrong or not an existing user!';\n                    this.setState({errorMessage:this.errorMessage})\n                }\n                    })\n\n            } else {\n            this.errorMessage = 'Account name or password cannot be blank!';\n            this.setState({errorMessage:this.errorMessage})\n            }\n\n        return this.errorMessage\n\n    }\n    render(){\n        if(this.state.redirect){\n            return(\n                <Redirect to='/Main' />)\n        }\n        return(\n            <div className = \"col-lg-6 col-md-6 col-sm-6 col-xs-6\">\n\n                <div className='card' >\n                    <div className='card-header text-left'>Login</div>\n                    <div className='card-body'>\n                        {!(this.errorMessage=== '')? <div className= 'row alert-danger'>{this.errorMessage}</div>:''}\n                        <form method=\"GET\" action=\"index.html\" onSubmit = {this.handleSubmit}>\n                        <div className='form-row'>\n                            <div className='form-group col-md-6'>\n                                <label className='text-left' htmlFor='Lname_field'>Account Name:</label>\n                                <input  type=\"text\" id=\"Lname_field\" placeholder= 'Enter account name'/>\n                            </div>\n                            <div className='form-group col-md-6'>\n                                <label className='text-left' htmlFor='Lpassword'>Password:</label>\n                                <input  type=\"password\" id=\"Lpassword\" placeholder= 'Enter password'/>\n                            </div>\n                        </div>\n\n                            <div className='form-row center'>\n\n                                <div className='form-group col-md-12'>\n                                    <button className=\"btn btn-primary\" type = 'submit'>Login</button>\n                                </div>\n                            </div>\n\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n\n        )\n    }\n\n}\nconst mapStateToProps = (state) => {\n\n    return {\n        usergroup:state.usergroup\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        userlogin: (userId,password) => dispatch(userlogin(userId,password)),\n        sendcookies:(cookies)=>dispatch(sendcookies(cookies))\n    }\n};\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login)\n"]},"metadata":{},"sourceType":"module"}