{"ast":null,"code":"var _jsxFileName = \"/Users/alexwan/Documents/GitHub/hw4-BochengWan123/hw4/src/Component/Main/Main.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Redirect } from \"react-router-dom\";\nimport { userlogout, requestdata } from \"../../actions\";\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userId: this.props.userId,\n      friendlist: [],\n      baseinfo: this.props.baseinfo,\n      data: null\n    };\n    this.fetch = false;\n  }\n\n  componentDidMount() {\n    fetch(`https://jsonplaceholder.typicode.com/posts`).then(res => res.json()).then(res => this.props.requestdata(res));\n\n    let a = () => {\n      this.setState({\n        data: this.props.data\n      });\n    };\n\n    setTimeout(a, 300);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, \" Hello! \", this.state.userId, \"!Welcome to your zone!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-4 col-md-4 col-sm-4 col-xs-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }, \"Logout\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, \"Profile\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userId: state.userId,\n    headline: state.headline,\n    baseinfo: state.baseinfo,\n    data: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    requestdata: data => dispatch(requestdata(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);","map":{"version":3,"sources":["/Users/alexwan/Documents/GitHub/hw4-BochengWan123/hw4/src/Component/Main/Main.js"],"names":["React","connect","Redirect","userlogout","requestdata","Main","Component","constructor","props","state","userId","friendlist","baseinfo","data","fetch","componentDidMount","then","res","json","a","setState","setTimeout","render","mapStateToProps","headline","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,sCAAP;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,UAAR,EAAmBC,WAAnB,QAAqC,eAArC;;AAGA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAC,KAAKF,KAAL,CAAWE,MAAnB;AACCC,MAAAA,UAAU,EAAC,EADZ;AAECC,MAAAA,QAAQ,EAAC,KAAKJ,KAAL,CAAWI,QAFrB;AAGCC,MAAAA,IAAI,EAAE;AAHP,KAAb;AAKA,SAAKC,KAAL,GAAa,KAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBD,IAAAA,KAAK,CAAE,4CAAF,CAAL,CAAoDE,IAApD,CAAyDC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAhE,EAA4EF,IAA5E,CAAiFC,GAAG,IAEpF,KAAKT,KAAL,CAAWJ,WAAX,CAAuBa,GAAvB,CAFA;;AAGA,QAAIE,CAAC,GAAG,MACR;AACI,WAAKC,QAAL,CAAc;AAACP,QAAAA,IAAI,EAAC,KAAKL,KAAL,CAAWK;AAAjB,OAAd;AACH,KAHD;;AAKAQ,IAAAA,UAAU,CAACF,CAAD,EAAG,GAAH,CAAV;AACH;;AAKDG,EAAAA,MAAM,GAAE;AAEJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAa,KAAKb,KAAL,CAAWC,MAAxB,2BADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAG,qCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,IAAI,EAAG,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADA,eAIA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,IAAI,EAAG,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAJA,CADJ,CADJ,CADJ,CAJJ,CADJ;AAyBH;;AArD6B;;AAyDlC,MAAMa,eAAe,GAAId,KAAD,IAAW;AAE/B,SAAO;AACHC,IAAAA,MAAM,EAACD,KAAK,CAACC,MADV;AAEHc,IAAAA,QAAQ,EAACf,KAAK,CAACe,QAFZ;AAGHZ,IAAAA,QAAQ,EAACH,KAAK,CAACG,QAHZ;AAIHC,IAAAA,IAAI,EAACJ,KAAK,CAACI;AAJR,GAAP;AAMH,CARD;;AAUA,MAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHtB,IAAAA,WAAW,EAAGS,IAAD,IAASa,QAAQ,CAACtB,WAAW,CAACS,IAAD,CAAZ;AAD3B,GAAP;AAGH,CAJD;;AAOA,eAAeZ,OAAO,CAACsB,eAAD,EAAiBE,kBAAjB,CAAP,CAA4CpB,IAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Redirect} from \"react-router-dom\";\nimport {userlogout,requestdata} from \"../../actions\";\n\n\nclass Main extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {userId:this.props.userId,\n                      friendlist:[],\n                      baseinfo:this.props.baseinfo,\n                      data: null,\n        };\n        this.fetch = false;\n    }\n\n    componentDidMount() {\n        fetch(`https://jsonplaceholder.typicode.com/posts`).then(res => res.json()).then(res =>\n\n        this.props.requestdata(res));\n        let a = ()=>\n        {\n            this.setState({data:this.props.data});\n        }\n\n        setTimeout(a,300)\n    }\n\n\n\n\n    render(){\n\n        return(\n            <div>\n                <div className=\"jumbotron text-center\">\n                    <h1> Hello! {this.state.userId}!Welcome to your zone!</h1>\n                </div>\n                <div className = 'row'>\n                    <div className = \"col-lg-4 col-md-4 col-sm-4 col-xs-4\">\n                        <div className='card'>\n                            <div className='row'>\n                            <div className='col-md-2'>\n                                <button className=\"btn btn-primary\" type = 'submit'>Logout</button>\n                            </div>\n                            <div className='col-md-2'>\n                                <button className=\"btn btn-primary\" type = 'submit'>Profile</button>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                </div>\n\n\n            </div>\n\n        )\n\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        userId:state.userId,\n        headline:state.headline,\n        baseinfo:state.baseinfo,\n        data:state.data\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        requestdata: (data)=> dispatch(requestdata(data))\n    }\n};\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Main)"]},"metadata":{},"sourceType":"module"}